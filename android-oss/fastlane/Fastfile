fastlane_version "2.68.0"

$LOAD_PATH << '../lib'
require 'milkrun'
require_relative '../config/initializer'

default_platform :android

lane :alpha do
  Milkrun::VersionCode.new(audience: 'internal').bump
  gradle(task: "assembleInternalDebug")

  crashlytics(
    api_token: ENV["apiKey"],
    build_secret: ENV["apiSecret"],
    groups: "development",
    notifications: true
    )

  slack(
    slack_url: ENV["slack_webhook"],
    message: "Alpha build successfully delivered to Crashlytics!"
    )
end

lane :external do
  Milkrun::VersionCode.new(audience: 'external').bump
  build_android_app(task: "assembleExternalRelease")

  crashlytics(
    api_token: Milkrun::FabricCredentialsExtractor.new.api_key,
    build_secret: Milkrun::FabricCredentialsExtractor.new.api_secret,
    groups: "development",
    notifications: true
    )

  slack(
    slack_url: Milkrun::SlackWebhookExtractor.new.webhook,
    message: "External release build successfully delivered!"
    )
end

lane :internal do
  audience = 'internal'
  build_type = 'release'
  version_code = Milkrun::VersionCode.new(audience: audience).bump

  build_android_app(task: "assembleInternalRelease")

  path_to_apk = lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]
  Milkrun::S3Package.new(version_code: version_code, file_path: path_to_apk).upload

  changelog = Milkrun::Changelog.new(audience: audience, build_type: build_type, version_code: version_code)
  commit_message = last_git_commit[:message]
  changelog.instance_variable_set(:@changelog, commit_message)
  changelog.publish

  crashlytics(
    api_token: Milkrun::FabricCredentialsExtractor.new.api_key,
    build_secret: Milkrun::FabricCredentialsExtractor.new.api_secret,
    groups: "development",
    notifications: true
    )

  slack(
    slack_url: Milkrun::SlackWebhookExtractor.new.webhook,
    message: "Internal release build successfully delivered to S3 and Crashlytics!"
    )

end
